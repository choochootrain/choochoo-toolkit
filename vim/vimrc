"##############################################################################
"#    Basic stuff                                                             #
"##############################################################################

" this aint your daddy's vi
set nocompatible
" change buffer without saving
set hidden
" show line numbers
set number
" close potential security hole by ignoring modelines in files
set modelines=0
" no delay when escaping
set ttimeoutlen=0
" show status line
set laststatus=2
" modern encoding default
set encoding=utf-8
" shit is annoying
set noerrorbells
set novisualbell
" more natural split opening
set splitbelow
set splitright
" make menu useful
set wildmenu
" use mouse for selection
set mouse=a
" no redraw while executing macros
set nolazyredraw
" show informative title
set title
" automatically reload files on external change
set autoread
" allow a metric shittonne of buffers to be open at once
set tabpagemax=1000

"------------------------------------------------------------------------------
" use the damn hjkl keys
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

"------------------------------------------------------------------------------
" continue indentation onto next line
set autoindent
" copy indentation structure of previous lines
set copyindent
" make vim smart about tabs
set smarttab
" use spaces for tab
set expandtab
" 2 spaces to tab
set shiftwidth=4
set softtabstop=4

"------------------------------------------------------------------------------
" keep 5 lines visible below cursor
set scrolloff=5
" search is case-insensitive unless there is a capital letter
set smartcase
" show search results as you type
set incsearch
" highlight all matches for previous search
set hlsearch
" show matching bracket
set showmatch
" use very magic search patterns (standard regex)
nnoremap / /\v
vnoremap / /\v

"------------------------------------------------------------------------------
" dont save backup files
set nobackup
" dont make swap files
set noswapfile

"------------------------------------------------------------------------------
" characters treated as whitespace
set listchars=eol:$,tab:>-,trail:.,extends:>,precedes:<,nbsp:_
" make deleting useful
set backspace=indent,eol,start
" highlight conflict markers
match ErrorMsg '^\(<\||\|=\|>\)\{7\}\([^=].\+\)\?$'

"------------------------------------------------------------------------------
" add line at 80 characters
set colorcolumn=80
" show current line
set cursorline
" show current column
set cursorcolumn

"------------------------------------------------------------------------------
" enable code folding
set foldenable
" hide fold column on start
set foldcolumn=0
" set folds by syntax
set foldmethod=syntax
" start with all folds open
set foldlevelstart=99
" specify commands which open folds
set foldopen=block,hor,insert,jump,mark,percent,quickfix,search,tag,undo
" make foldcolumn 4 characters wide
let g:last_fold_column_width = 4
function! FoldColumnToggle()
  if &foldcolumn
    let g:last_fold_column_width = &foldcolumn
    setlocal foldcolumn=0
  else
    let &l:foldcolumn = g:last_fold_column_width
  endif
endfunction

"------------------------------------------------------------------------------
" file specific settings
filetype plugin indent on
" syntax highlighting is kinda useful
syntax on

"------------------------------------------------------------------------------
" load directory specific files
"   only works when vim is invoked in same directory as .vim.custom
if filereadable(".vim.custom")
  source .vim.custom
endif

"------------------------------------------------------------------------------
" :W sudo saves the file when opened without write permissions
command W w !sudo tee % > /dev/null


"##############################################################################
"#    Leader keybindings                                                      #
"##############################################################################

" set leader key
let mapleader=","

" edit vimrc
nnoremap <silent> <leader>ev :tabe $MYVIMRC<CR>
" reload vimrc
nnoremap <silent> <leader>sv :so $MYVIMRC<CR>

" toggle whitespace visible
nnoremap <leader>i :set list! <CR>

" fix indents
nnoremap <leader>in gg=G''

" copy selected text
nnoremap <leader>c :w !xsel -i -b<CR>

" next tab
nnoremap <leader>w gt<CR>
" previous tab
nnoremap <leader>q gT<CR>

" next buffer
nnoremap <leader>W :bn<CR>
" previous buffer
nnoremap <leader>Q :bp<CR>

" toggle fold open/close
nnoremap <leader>z za

" toggle fold column show/hide
nnoremap <leader>f :call FoldColumnToggle()<CR>

" scroll faster
nnoremap <C-e> 5<C-e>
nnoremap <C-y> 5<C-y>

" search in normal
nnoremap <space> /
nnoremap <c-space> ?

" make : commands easier to type
nnoremap ; :
" keep semicolon accessible for idk what
nnoremap <leader>; ;

" jump to matching bracket
nnoremap <Tab> %
vnoremap <Tab> %

" jump to next conflict marker
nnoremap <silent> <leader>co /^\(<\\|=\\|>\)\{7\}\([^=].\+\)\?$<CR>

" clear trailing whitespace
map <leader>T :%s/\s\+$//<CR>

" open url in default browser
function! OpenURL()
  let s:uri = matchstr(getline("."), '[a-z]*:\/\/[^ >,;:]*')
  echo s:uri
  if s:uri != ""
    exec "!xdg-open \"" . s:uri . "\""
  else
    echo "No URI found in line."
  endif
endfunction
noremap <leader>o :call OpenURL()<CR>



"##############################################################################
"#    cursor hacks                                                            #
"##############################################################################
"" use orange cursor in insert mode and gray cursor otherwise
if &term =~ "xterm\\|rxvt"
  let &t_SI = "\<Esc>]12;orange\x7"
  let &t_EI = "\<Esc>]12;gray\x7"

  " reset cursor when vim exits
  autocmd VimLeave * silent !echo -ne "\033]112\007"
endif


"##############################################################################
"#    vundle/plugin config                                                    #
"##############################################################################
" add vundle to runtime path
set runtimepath+=~/.vim/bundle/vundle/
" setup vundle
call vundle#rc()
" let vundle manage vundle
Bundle 'gmarik/vundle'

"------------------------------------------------------------------------------
Bundle 'bling/vim-airline'
" use fancy symbols
let g:airline_powerline_fonts = 0
let g:airline_theme='powerlineish'
let g:airline#extensions#tabline#enabled=1

"------------------------------------------------------------------------------
Bundle 'airblade/vim-gitgutter'
noremap <leader>gg :GitGutterToggle<CR>
" off by default
let g:gitgutter_enabled = 0
let g:gitgutter_highlight_lines = 1
" consistent coloring with line number column
highlight clear SignColumn

"------------------------------------------------------------------------------
Bundle 'sjl/gundo.vim'
noremap <leader>u :GundoToggle<CR>
" show gundo at bottom
let g:gundo_preview_bottom = 1

"------------------------------------------------------------------------------
" only use if ag is available
if executable('ag')
  Bundle 'rking/ag.vim'
  let g:ackprg = 'ag --nogroup --column'
endif

"------------------------------------------------------------------------------
Bundle 'scrooloose/nerdtree'
map <C-n> :NERDTreeToggle<CR>
let g:NERDTreeIgnore=['\~$', '__pycache__', '*.pyc$']

"------------------------------------------------------------------------------
Bundle 'kshenoy/vim-signature'
noremap <leader>m :SignatureToggleSigns<CR>

"------------------------------------------------------------------------------
Bundle 'mxw/vim-jsx'
let g:jsx_ext_required = 0

"------------------------------------------------------------------------------
Bundle 'Yggdroot/indentLine'
Bundle 'bling/vim-bufferline'
Bundle 'mhinz/vim-startify'
Bundle 'myusuf3/numbers.vim'
Bundle 'scrooloose/nerdcommenter'
Bundle 'flazz/vim-colorschemes'
Bundle 'ervandew/supertab'
Bundle 'tpope/vim-fugitive'
Bundle 'wting/rust.vim'
Bundle 'fatih/vim-go'
Bundle 'ekalinin/Dockerfile.vim'
Bundle 'valloric/YouCompleteMe'
Bundle 'derekwyatt/vim-scala'
Bundle 'tpope/vim-markdown'
Bundle 'nielsmadan/harlequin'
"------------------------------------------------------------------------------

set background=dark
colorscheme harlequin
highlight ColorColumn ctermbg=black
highlight Normal ctermbg=none
highlight NonText ctermbg=none
